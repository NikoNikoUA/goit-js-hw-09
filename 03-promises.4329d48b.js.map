{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAuCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IA9CMQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAQN,IANA,IAAMC,EAAM,GAENC,EAAaH,EAAMI,OAAOC,SAAShB,MAAMiB,MACzCC,EAAYP,EAAMI,OAAOC,SAASG,KAAKF,MACvCG,EAAcT,EAAMI,OAAOC,SAASK,OAAOJ,MAExCK,EAAI,EAAGA,GAAKF,EAAaE,GAAK,EAAG,CACxC,IAAMvB,EAAWuB,EACXtB,EAAQuB,OAAOT,IAAeQ,EAAI,GAAKC,OAAOL,GACpDL,EAAIW,KAAK1B,EAAcC,EAAUC,G,CAEnCa,EAAIY,SAAQ,SAAAC,GACVA,EACGC,MAAK,SAAAC,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MACjBJ,EAAAiC,OAAOC,QAAQ,uBAAwCC,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,MAAK,CAC9DgC,MAAK,QACPC,aAAc,MACdlC,SAAU,iB,IAGbmC,OAAM,SAAAN,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MAClBJ,EAAAiC,OAAOM,QAAQ,sBAAqCJ,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,MAAK,CAC7DgC,MAAO,QACPC,aAAc,MACdlC,SAAU,iB","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const arr = [];\n\n  const delayValue = event.target.elements.delay.value;\n  const stepValue = event.target.elements.step.value;\n  const amountValue = event.target.elements.amount.value;\n\n  for (let i = 1; i <= amountValue; i += 1) {\n    const position = i;\n    const delay = Number(delayValue) + (i - 1) * Number(stepValue);\n    arr.push(createPromise(position, delay));\n  }\n  arr.forEach(promise => {\n    promise\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n          width: '320px',\n          borderRadius: '8px',\n          position: 'center-center',\n        });\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n          width: '320px',\n          borderRadius: '8px',\n          position: 'center-center',\n        });\n      });\n  });\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","arr","delayValue","target","elements","value","stepValue","step","amountValue","amount","i","Number","push","forEach","promise","then","param","Notify","success","concat","width","borderRadius","catch","failure"],"version":3,"file":"03-promises.4329d48b.js.map"}