{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAwCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA/CAQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAEN,MAAMC,EAAM,GAENC,EAAaH,EAAMI,OAAOC,SAAShB,MAAMiB,MACzCC,EAAYP,EAAMI,OAAOC,SAASG,KAAKF,MACvCG,EAAcT,EAAMI,OAAOC,SAASK,OAAOJ,MAEjD,IAAK,IAAIK,EAAI,EAAGA,GAAKF,EAAaE,GAAK,EAAG,CACxC,MAAMvB,EAAWuB,EACXtB,EAAQuB,OAAOT,IAAeQ,EAAI,GAAKC,OAAOL,GACpDM,QAAQC,IAAIzB,GACZa,EAAIa,KAAK5B,EAAcC,EAAUC,G,CAEnCa,EAAIc,SAAQC,IACVA,EACGC,MAAK,EAAC9B,SAAEA,EAAQC,MAAEA,MACjBJ,EAAAkC,OAAOC,QAAQ,uBAAqBhC,QAAiBC,MAAW,CAC5DgC,MAAK,QACPC,aAAc,MACdlC,SAAU,iBACV,IAEHmC,OAAM,EAACnC,SAAEA,EAAQC,MAAEA,MAClBJ,EAAAkC,OAAOK,QAAQ,sBAAoBpC,QAAeC,MAAW,CAC3DgC,MAAO,QACPC,aAAc,MACdlC,SAAU,iBACV,GACF,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const arr = [];\n\n  const delayValue = event.target.elements.delay.value;\n  const stepValue = event.target.elements.step.value;\n  const amountValue = event.target.elements.amount.value;\n\n  for (let i = 1; i <= amountValue; i += 1) {\n    const position = i;\n    const delay = Number(delayValue) + (i - 1) * Number(stepValue);\n    console.log(delay);\n    arr.push(createPromise(position, delay));\n  }\n  arr.forEach(promise => {\n    promise\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n          width: '320px',\n          borderRadius: '8px',\n          position: 'center-center',\n        });\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n          width: '320px',\n          borderRadius: '8px',\n          position: 'center-center',\n        });\n      });\n  });\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","arr","delayValue","target","elements","value","stepValue","step","amountValue","amount","i","Number","console","log","push","forEach","promise","then","Notify","success","width","borderRadius","catch","failure"],"version":3,"file":"03-promises.a38392cd.js.map"}